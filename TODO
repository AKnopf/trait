= TODO
* Class Incorporation: resolves should be Hash<Symbol, Proc> instead of Hash<Symbol,Resolve>
* Use a builder pattern for creating incorporations!
    * Make builder.resolves([:m1, :m2, :m3]).with_pattern.etc.etc possible
    * Patterns for resolves only in this syntax: Normalized resolves are always just lambdas
    * Therefore refactor resolve class...
* incorporation options :only and :except


= ideas
* Define "part state"  - a trait that handles instance variables.
  So the class does not need to implement all the getters and setters manually
* Patterns for resolves: (manual lambda does not count as pattern any longer)
    * method(symbol) - calling the in-class-defined-method instead
    * call_in_order
    * inject
    * pick_one

